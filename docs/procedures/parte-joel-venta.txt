CREATE OR REPLACE FUNCTION buscar_cliente (rellenar_material VARCHAR)
	RETURNS TABLE (id integer, nombre varchar, apellido varchar) AS
$$
BEGIN
	RETURN QUERY 
		select p.persona_id, p.nombre, p.apellido
			from personas p
			where p.persona_id in (select	c.persona_id from clientes c) and
				p.nombre LIKE rellenar_material || '%';
END;
$$
LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION buscar_producto (rellenar_material VARCHAR)
	RETURNS TABLE (id integer, nombre varchar, descripcion varchar, precio_unitario real) AS
$$
BEGIN
	RETURN QUERY 
		select p.producto_id, p.nombre, p.descripcion, p.precio
			from productos p
			where p.nombre LIKE rellenar_material || '%';
END;
$$
LANGUAGE plpgsql;


// ---------------------
CREATE OR REPLACE PROCEDURE venta(
    cliente IN INTEGER,
    preciot IN NUMERIC,
    factobol IN INTEGER,
    staffid IN INTEGER)
IS
BEGIN
  INSERT
  INTO BOLETA
    (
      PRECIO_TOTAL,
      CLIENTE_ID,
      FACTURA,
      FECHA,
      STAFF_ID)
      
    VALUES
    (
      preciot,
      cliente,
      factobol,
      SYSDATE,
      staffid);
END venta;


CREATE OR REPLACE PROCEDURE detalle_boleta(
    boletaid IN INTEGER,
    productoid IN INTEGER,
    desc IN FLOAT,
    cant IN INTEGER)
IS
BEGIN
  INSERT
  INTO BOLETA
    (
      BOLETA_ID,
      PRODUCTO_ID,
      DESCUENTO,
      CANTIDAD)
      
    VALUES
    (
      boletaid,
      productoid,
      desc,
      cant);
END detalle_boleta;



CREATE OR REPLACE PROCEDURE produccion(
    personaid IN INTEGER,
    boletaid IN INTEGER,
    productoid IN INTEGER)
IS
BEGIN
  INSERT
  INTO BOLETA
    (
      PERSONA_ID,
      BOLETA_ID,
      PRODUCTO_ID,
      ESTADO_ID)
      
    VALUES
    (
      personaid,
      boletaid,
      productoid,
      1);
END produccion;


